<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classtao_1_1_drivetrain" kind="class" language="C++" prot="public">
    <compoundname>tao::Drivetrain</compoundname>
    <includes refid="drivetrain_8h" local="no">drivetrain.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classtao_1_1_drivetrain_1a2dc10ef11b554e29627d93869bade72f" prot="private" static="no" strong="yes">
        <type></type>
        <name>ErrorModes</name>
        <qualifiedname>tao::Drivetrain::ErrorModes</qualifiedname>
        <enumvalue id="classtao_1_1_drivetrain_1a2dc10ef11b554e29627d93869bade72fa2ca9469819fb0fb61ff98e914a7ccca0" prot="private">
          <name>Relative</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtao_1_1_drivetrain_1a2dc10ef11b554e29627d93869bade72fab51ca26c6c89cfc9bec338f7a0d3e0c8" prot="private">
          <name>Absolute</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="356" column="1" bodyfile="include/taolib/drivetrain.h" bodystart="356" bodyend="359"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1aede65b3dc8d5babee429b956c76d26eb" prot="private" static="no" mutable="no">
        <type>vex::motor_group &amp;</type>
        <definition>vex::motor_group&amp; tao::Drivetrain::left_motors</definition>
        <argsstring></argsstring>
        <name>left_motors</name>
        <qualifiedname>tao::Drivetrain::left_motors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="361" column="18" bodyfile="include/taolib/drivetrain.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1af27899d6b811fcb523f2da967e468e57" prot="private" static="no" mutable="no">
        <type>vex::motor_group &amp;</type>
        <definition>vex::motor_group &amp; tao::Drivetrain::right_motors</definition>
        <argsstring></argsstring>
        <name>right_motors</name>
        <qualifiedname>tao::Drivetrain::right_motors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="361" column="30" bodyfile="include/taolib/drivetrain.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1a6b701677d5612b218460cddfe4a85091" prot="private" static="no" mutable="no">
        <type>vex::encoder *</type>
        <definition>vex::encoder* tao::Drivetrain::left_encoder</definition>
        <argsstring></argsstring>
        <name>left_encoder</name>
        <qualifiedname>tao::Drivetrain::left_encoder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="362" column="14" bodyfile="include/taolib/drivetrain.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1aeac47de5f3557d1f61f609cfc3df21b4" prot="private" static="no" mutable="no">
        <type>vex::encoder *</type>
        <definition>vex::encoder * tao::Drivetrain::right_encoder</definition>
        <argsstring></argsstring>
        <name>right_encoder</name>
        <qualifiedname>tao::Drivetrain::right_encoder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="362" column="27" bodyfile="include/taolib/drivetrain.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1ab3c0834a767f1e7d9767dd25618040ae" prot="private" static="no" mutable="no">
        <type>vex::inertial *</type>
        <definition>vex::inertial* tao::Drivetrain::IMU</definition>
        <argsstring></argsstring>
        <name>IMU</name>
        <qualifiedname>tao::Drivetrain::IMU</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="363" column="15" bodyfile="include/taolib/drivetrain.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1a336548e88be874b8635575acf8e462c6" prot="private" static="no" mutable="no">
        <type><ref refid="classtao_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tao::Drivetrain::global_position</definition>
        <argsstring></argsstring>
        <name>global_position</name>
        <qualifiedname>tao::Drivetrain::global_position</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="365" column="9" bodyfile="include/taolib/drivetrain.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1a302419a1fb0c3470140aa44528b9c3c7" prot="private" static="no" mutable="no">
        <type><ref refid="classtao_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tao::Drivetrain::target_position</definition>
        <argsstring></argsstring>
        <name>target_position</name>
        <qualifiedname>tao::Drivetrain::target_position</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="367" column="9" bodyfile="include/taolib/drivetrain.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1aab2a1b792a62cd30f4eda9f3c815aad9" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tao::Drivetrain::target_distance</definition>
        <argsstring></argsstring>
        <name>target_distance</name>
        <qualifiedname>tao::Drivetrain::target_distance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="368" column="8" bodyfile="include/taolib/drivetrain.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1aea7039d6481adeb19afbe68c522fd6aa" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tao::Drivetrain::target_heading</definition>
        <argsstring></argsstring>
        <name>target_heading</name>
        <qualifiedname>tao::Drivetrain::target_heading</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="368" column="24" bodyfile="include/taolib/drivetrain.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1a38d469766eddf01428933f24b26fe2bf" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tao::Drivetrain::start_heading</definition>
        <argsstring></argsstring>
        <name>start_heading</name>
        <qualifiedname>tao::Drivetrain::start_heading</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="369" column="8" bodyfile="include/taolib/drivetrain.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1a5895a8b657c381e3e1f5286f5c0a5ced" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tao::Drivetrain::initial_heading</definition>
        <argsstring></argsstring>
        <name>initial_heading</name>
        <qualifiedname>tao::Drivetrain::initial_heading</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="370" column="8" bodyfile="include/taolib/drivetrain.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1a98991417402b4ec969a0d2561bc126e1" prot="private" static="no" mutable="no">
        <type>ErrorModes</type>
        <definition>ErrorModes tao::Drivetrain::error_mode</definition>
        <argsstring></argsstring>
        <name>error_mode</name>
        <qualifiedname>tao::Drivetrain::error_mode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="372" column="12" bodyfile="include/taolib/drivetrain.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1a5daf127e214efc809253586fd962f6ff" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tao::Drivetrain::max_drive_velocity</definition>
        <argsstring></argsstring>
        <name>max_drive_velocity</name>
        <qualifiedname>tao::Drivetrain::max_drive_velocity</qualifiedname>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="374" column="8" bodyfile="include/taolib/drivetrain.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1a4509438faa1a67e57fd1326e9de20e48" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tao::Drivetrain::max_turn_velocity</definition>
        <argsstring></argsstring>
        <name>max_turn_velocity</name>
        <qualifiedname>tao::Drivetrain::max_turn_velocity</qualifiedname>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="374" column="28" bodyfile="include/taolib/drivetrain.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1a927a8b0429e5fbde5e479cf40158b1e8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tao::Drivetrain::drive_tolerance</definition>
        <argsstring></argsstring>
        <name>drive_tolerance</name>
        <qualifiedname>tao::Drivetrain::drive_tolerance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="375" column="8" bodyfile="include/taolib/drivetrain.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1a317bef2333abd120d0df9356b4ed2927" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tao::Drivetrain::turn_tolerance</definition>
        <argsstring></argsstring>
        <name>turn_tolerance</name>
        <qualifiedname>tao::Drivetrain::turn_tolerance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="375" column="24" bodyfile="include/taolib/drivetrain.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1abfebcf7a511b33d6778b6e9ae7da9f99" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tao::Drivetrain::drive_error</definition>
        <argsstring></argsstring>
        <name>drive_error</name>
        <qualifiedname>tao::Drivetrain::drive_error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="376" column="8" bodyfile="include/taolib/drivetrain.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1a23bbf108e35f9a7a5269a61259d8cc3b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tao::Drivetrain::turn_error</definition>
        <argsstring></argsstring>
        <name>turn_error</name>
        <qualifiedname>tao::Drivetrain::turn_error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="376" column="20" bodyfile="include/taolib/drivetrain.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1a5989b2bc87e0a16aaaeb6cad5b516a13" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tao::Drivetrain::lookahead_distance</definition>
        <argsstring></argsstring>
        <name>lookahead_distance</name>
        <qualifiedname>tao::Drivetrain::lookahead_distance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="378" column="8" bodyfile="include/taolib/drivetrain.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1a53e04e719fc3c6724e6200ace6fc84bc" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tao::Drivetrain::track_width</definition>
        <argsstring></argsstring>
        <name>track_width</name>
        <qualifiedname>tao::Drivetrain::track_width</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="379" column="8" bodyfile="include/taolib/drivetrain.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1ac34a8f5c590680b0d152fd155c86d12a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tao::Drivetrain::wheel_circumference</definition>
        <argsstring></argsstring>
        <name>wheel_circumference</name>
        <qualifiedname>tao::Drivetrain::wheel_circumference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="380" column="8" bodyfile="include/taolib/drivetrain.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1a0e301bdff053f3aa371851ffc4cc208d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tao::Drivetrain::external_gear_ratio</definition>
        <argsstring></argsstring>
        <name>external_gear_ratio</name>
        <qualifiedname>tao::Drivetrain::external_gear_ratio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="381" column="8" bodyfile="include/taolib/drivetrain.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1adff7a9841bfe21586a9c39340eca31a5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tao::Drivetrain::settled</definition>
        <argsstring></argsstring>
        <name>settled</name>
        <qualifiedname>tao::Drivetrain::settled</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="384" column="6" bodyfile="include/taolib/drivetrain.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1aca61da845056d394007ab8c1926a19d7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tao::Drivetrain::IMU_invalid</definition>
        <argsstring></argsstring>
        <name>IMU_invalid</name>
        <qualifiedname>tao::Drivetrain::IMU_invalid</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="385" column="6" bodyfile="include/taolib/drivetrain.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1ae873fb5b2a4f507669cbb3283af50991" prot="private" static="no" mutable="no">
        <type><ref refid="classtao_1_1_p_i_d_controller" kindref="compound">PIDController</ref></type>
        <definition>PIDController tao::Drivetrain::drive_controller</definition>
        <argsstring></argsstring>
        <name>drive_controller</name>
        <qualifiedname>tao::Drivetrain::drive_controller</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="387" column="15" bodyfile="include/taolib/drivetrain.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1afaec4419e4fb98af8a504eee2ed58e60" prot="private" static="no" mutable="no">
        <type><ref refid="classtao_1_1_p_i_d_controller" kindref="compound">PIDController</ref></type>
        <definition>PIDController tao::Drivetrain::turn_controller</definition>
        <argsstring></argsstring>
        <name>turn_controller</name>
        <qualifiedname>tao::Drivetrain::turn_controller</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="387" column="32" bodyfile="include/taolib/drivetrain.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1a37292b2fbf3529a0f2250bd5231015f3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tao::Drivetrain::daemon_active</definition>
        <argsstring></argsstring>
        <name>daemon_active</name>
        <qualifiedname>tao::Drivetrain::daemon_active</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="396" column="6" bodyfile="include/taolib/drivetrain.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1aa66dee790cc4b05186528c6be378e35d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tao::Drivetrain::logging_active</definition>
        <argsstring></argsstring>
        <name>logging_active</name>
        <qualifiedname>tao::Drivetrain::logging_active</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="397" column="6" bodyfile="include/taolib/drivetrain.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1aef9d215635af3ce4849b51d81a52b631" prot="private" static="no" mutable="no">
        <type>vex::thread</type>
        <definition>vex::thread tao::Drivetrain::daemon_thread</definition>
        <argsstring></argsstring>
        <name>daemon_thread</name>
        <qualifiedname>tao::Drivetrain::daemon_thread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="399" column="13" bodyfile="include/taolib/drivetrain.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtao_1_1_drivetrain_1a94283e2ca8ba6f47971426cf0348a877" prot="private" static="no" mutable="no">
        <type>vex::thread</type>
        <definition>vex::thread tao::Drivetrain::logging_thread</definition>
        <argsstring></argsstring>
        <name>logging_thread</name>
        <qualifiedname>tao::Drivetrain::logging_thread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="399" column="27" bodyfile="include/taolib/drivetrain.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtao_1_1_drivetrain_1aef492840275283a8c78183213f7f11e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tao::Drivetrain::Drivetrain</definition>
        <argsstring>(vex::motor_group &amp;left_motors, vex::motor_group &amp;right_motors, vex::inertial &amp;IMU, DrivetrainProfile profile)</argsstring>
        <name>Drivetrain</name>
        <qualifiedname>tao::Drivetrain::Drivetrain</qualifiedname>
        <param>
          <type>vex::motor_group &amp;</type>
          <declname>left_motors</declname>
        </param>
        <param>
          <type>vex::motor_group &amp;</type>
          <declname>right_motors</declname>
        </param>
        <param>
          <type>vex::inertial &amp;</type>
          <declname>IMU</declname>
        </param>
        <param>
          <type><ref refid="structtao_1_1_drivetrain_profile" kindref="compound">DrivetrainProfile</ref></type>
          <declname>profile</declname>
        </param>
        <briefdescription>
<para>Constructs a new <ref refid="classtao_1_1_drivetrain" kindref="compound">Drivetrain</ref> object using two motor groups and an IMU. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left_motors</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vex::motor_group object representing the left side of the drivetrain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right_motors</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vex::motor_group object representing the right side of the drivetrain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IMU</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vex::inertial object for tracking the drivetrain&apos;s orientation through a gyro. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profile</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="structtao_1_1_drivetrain_profile" kindref="compound">tao::DrivetrainProfile</ref> structure describing values related to the drivetrain for tuning. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a604e19d423fbb4a7655b251c6fc83f89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tao::Drivetrain::Drivetrain</definition>
        <argsstring>(vex::motor_group &amp;left_motors, vex::motor_group &amp;right_motors, DrivetrainProfile profile)</argsstring>
        <name>Drivetrain</name>
        <qualifiedname>tao::Drivetrain::Drivetrain</qualifiedname>
        <param>
          <type>vex::motor_group &amp;</type>
          <declname>left_motors</declname>
        </param>
        <param>
          <type>vex::motor_group &amp;</type>
          <declname>right_motors</declname>
        </param>
        <param>
          <type><ref refid="structtao_1_1_drivetrain_profile" kindref="compound">DrivetrainProfile</ref></type>
          <declname>profile</declname>
        </param>
        <briefdescription>
<para>Constructs a new <ref refid="classtao_1_1_drivetrain" kindref="compound">Drivetrain</ref> object using two motor groups. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left_motors</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vex::motor_group object representing the left side of the drivetrain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right_motors</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vex::motor_group object representing the right side of the drivetrain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profile</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="structtao_1_1_drivetrain_profile" kindref="compound">tao::DrivetrainProfile</ref> structure describing values related to the drivetrain for tuning. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1af27cccd2315a0729c9fa89314312d0c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tao::Drivetrain::Drivetrain</definition>
        <argsstring>(vex::motor_group &amp;left_motors, vex::motor_group &amp;right_motors, vex::encoder &amp;left_encoder, vex::encoder &amp;right_encoder, vex::inertial &amp;IMU, DrivetrainProfile profile)</argsstring>
        <name>Drivetrain</name>
        <qualifiedname>tao::Drivetrain::Drivetrain</qualifiedname>
        <param>
          <type>vex::motor_group &amp;</type>
          <declname>left_motors</declname>
        </param>
        <param>
          <type>vex::motor_group &amp;</type>
          <declname>right_motors</declname>
        </param>
        <param>
          <type>vex::encoder &amp;</type>
          <declname>left_encoder</declname>
        </param>
        <param>
          <type>vex::encoder &amp;</type>
          <declname>right_encoder</declname>
        </param>
        <param>
          <type>vex::inertial &amp;</type>
          <declname>IMU</declname>
        </param>
        <param>
          <type><ref refid="structtao_1_1_drivetrain_profile" kindref="compound">DrivetrainProfile</ref></type>
          <declname>profile</declname>
        </param>
        <briefdescription>
<para>Constructs a new <ref refid="classtao_1_1_drivetrain" kindref="compound">Drivetrain</ref> object using two motor groups, an IMU, and two tracking encoders. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left_motors</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vex::motor_group object representing the left side of the drivetrain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right_motors</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vex::motor_group object representing the right side of the drivetrain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left_encoder</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vex::encoder object representing the left tracking encoder. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right_encoder</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vex::encoder object representing the right tracking encoder. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IMU</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vex::inertial object for tracking the drivetrain&apos;s orientation through a gyro. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profile</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="structtao_1_1_drivetrain_profile" kindref="compound">tao::DrivetrainProfile</ref> structure describing values related to the drivetrain for tuning. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a8358a68227d0aa01d55d29dd99df8e13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tao::Drivetrain::Drivetrain</definition>
        <argsstring>(vex::motor_group &amp;left_motors, vex::motor_group &amp;right_motors, vex::encoder &amp;left_encoder, vex::encoder &amp;right_encoder, DrivetrainProfile profile)</argsstring>
        <name>Drivetrain</name>
        <qualifiedname>tao::Drivetrain::Drivetrain</qualifiedname>
        <param>
          <type>vex::motor_group &amp;</type>
          <declname>left_motors</declname>
        </param>
        <param>
          <type>vex::motor_group &amp;</type>
          <declname>right_motors</declname>
        </param>
        <param>
          <type>vex::encoder &amp;</type>
          <declname>left_encoder</declname>
        </param>
        <param>
          <type>vex::encoder &amp;</type>
          <declname>right_encoder</declname>
        </param>
        <param>
          <type><ref refid="structtao_1_1_drivetrain_profile" kindref="compound">DrivetrainProfile</ref></type>
          <declname>profile</declname>
        </param>
        <briefdescription>
<para>Constructs a new <ref refid="classtao_1_1_drivetrain" kindref="compound">Drivetrain</ref> object using two motor groups and two tracking encoders. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left_motors</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vex::motor_group object representing the left side of the drivetrain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right_motors</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vex::motor_group object representing the right side of the drivetrain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left_encoder</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vex::encoder object representing the left tracking encoder. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right_encoder</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vex::encoder object representing the right tracking encoder. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profile</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="structtao_1_1_drivetrain_profile" kindref="compound">tao::DrivetrainProfile</ref> structure describing values related to the drivetrain for tuning. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a1a1fa53ea307cb18c0094a1f540953ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tao::Drivetrain::~Drivetrain</definition>
        <argsstring>()</argsstring>
        <name>~Drivetrain</name>
        <qualifiedname>tao::Drivetrain::~Drivetrain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a514807bac58c3590e0c3da1e27c42338" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtao_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 tao::Drivetrain::get_position</definition>
        <argsstring>() const</argsstring>
        <name>get_position</name>
        <qualifiedname>tao::Drivetrain::get_position</qualifiedname>
        <briefdescription>
<para>Gets the current global position of the drivetrain as a <ref refid="classtao_1_1_vector2" kindref="compound">Vector2</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current global position of the drivetrain. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="142" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1ad17418f668336fa5a150bddf91120854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tao::Drivetrain::get_heading</definition>
        <argsstring>()</argsstring>
        <name>get_heading</name>
        <qualifiedname>tao::Drivetrain::get_heading</qualifiedname>
        <briefdescription>
<para>Gets the current counter-clockwise heading of the drivetrain in degrees. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If the IMU is not configured or installed, the heading will be calculated based on encoders only, using the drivetrain&apos;s track width measurements. </para>
</simplesect>
<simplesect kind="return"><para>The current heading of the drivetrain in degrees. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="149" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1affb17e0bc14ae1780c6327296aa1d6a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tao::Drivetrain::get_drive_distance</definition>
        <argsstring>() const</argsstring>
        <name>get_drive_distance</name>
        <qualifiedname>tao::Drivetrain::get_drive_distance</qualifiedname>
        <briefdescription>
<para>Gets the average linear distance from the starting position traveled by each wheel. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The average linear distance from the starting position traveled by each wheel. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="155" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1af2a2573a05c075484cef0209cd6b86b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtao_1_1_p_i_d_gains" kindref="compound">PIDGains</ref></type>
        <definition>PIDGains tao::Drivetrain::get_drive_gains</definition>
        <argsstring>() const</argsstring>
        <name>get_drive_gains</name>
        <qualifiedname>tao::Drivetrain::get_drive_gains</qualifiedname>
        <briefdescription>
<para>Gets the current gain constants of the drive PID controller. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current gains as a <ref refid="structtao_1_1_p_i_d_gains" kindref="compound">PIDGains</ref> struct. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="161" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1ab99c88e9b7a18f03cbc51461dec9b526" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtao_1_1_p_i_d_gains" kindref="compound">PIDGains</ref></type>
        <definition>PIDGains tao::Drivetrain::get_turn_gains</definition>
        <argsstring>() const</argsstring>
        <name>get_turn_gains</name>
        <qualifiedname>tao::Drivetrain::get_turn_gains</qualifiedname>
        <briefdescription>
<para>Gets the current gains of the turn PID controller. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current gains as a <ref refid="structtao_1_1_p_i_d_gains" kindref="compound">PIDGains</ref> struct. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="167" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1af1e6b329d695b7e375fe544df3c44359" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tao::Drivetrain::get_drive_error</definition>
        <argsstring>() const</argsstring>
        <name>get_drive_error</name>
        <qualifiedname>tao::Drivetrain::get_drive_error</qualifiedname>
        <briefdescription>
<para>Gets the current error of the drive PID controller. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current drive error (distance between the desired position and the current position). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="173" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a975ff7607b60814ae4e5e52803ef3cfd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tao::Drivetrain::get_turn_error</definition>
        <argsstring>() const</argsstring>
        <name>get_turn_error</name>
        <qualifiedname>tao::Drivetrain::get_turn_error</qualifiedname>
        <briefdescription>
<para>Gets the current error of the turn PID controller. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current turn error (distance in degrees between the desired position and the current position). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="179" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1acf95c62e6e4c4d56cdb7980ec6100a5e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tao::Drivetrain::get_drive_tolerance</definition>
        <argsstring>() const</argsstring>
        <name>get_drive_tolerance</name>
        <qualifiedname>tao::Drivetrain::get_drive_tolerance</qualifiedname>
        <briefdescription>
<para>Gets the minimum acceptable error threshold for the drive PID controller to consider its movements settled. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current minimum drive error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="185" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1ae9a6393f847dd32aed8e939e52c24e02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tao::Drivetrain::get_turn_tolerance</definition>
        <argsstring>() const</argsstring>
        <name>get_turn_tolerance</name>
        <qualifiedname>tao::Drivetrain::get_turn_tolerance</qualifiedname>
        <briefdescription>
<para>Gets the minimum acceptable error threshold in degrees for the drive PID controller to consider its movements settled. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current minimum turn error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="191" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a353c31cc7e6554299186fe2cc0274566" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tao::Drivetrain::get_lookahead_distance</definition>
        <argsstring>() const</argsstring>
        <name>get_lookahead_distance</name>
        <qualifiedname>tao::Drivetrain::get_lookahead_distance</qualifiedname>
        <briefdescription>
<para>Gets the lookahead distance used by the drivetrain&apos;s pure pursuit controller. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current lookahead radius </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="197" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a94b5d5694d15f3f7920fae9dbdbfe855" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tao::Drivetrain::get_track_width</definition>
        <argsstring>() const</argsstring>
        <name>get_track_width</name>
        <qualifiedname>tao::Drivetrain::get_track_width</qualifiedname>
        <briefdescription>
<para>Gets the track width of the drivetrain. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The distance between the left and right drivetrain wheels. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="203" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a1904f98b7bd7ce4489203f1cf4905d89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tao::Drivetrain::get_external_gear_ratio</definition>
        <argsstring>() const</argsstring>
        <name>get_external_gear_ratio</name>
        <qualifiedname>tao::Drivetrain::get_external_gear_ratio</qualifiedname>
        <briefdescription>
<para>Gets the current external gear ratio of the drivetrain. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current external gear ratio as a quotient. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="209" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1aa8c3f9b38c85835f0aa928317cf3bb8d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tao::Drivetrain::get_max_drive_velocity</definition>
        <argsstring>() const</argsstring>
        <name>get_max_drive_velocity</name>
        <qualifiedname>tao::Drivetrain::get_max_drive_velocity</qualifiedname>
        <briefdescription>
<para>Gets the current maximum velocity cap for forwards/backwards driving. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The maximum forward/backward driving velocity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="215" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a65293743431e4370ef05e539891a63b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tao::Drivetrain::get_max_turn_velocity</definition>
        <argsstring>() const</argsstring>
        <name>get_max_turn_velocity</name>
        <qualifiedname>tao::Drivetrain::get_max_turn_velocity</qualifiedname>
        <briefdescription>
<para>Gets the current maximum velocity cap for turning. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The maximum forward/backward turingn velocity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="221" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1ac3f4528f41c8582c51f8f83fc59fcaab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtao_1_1_drivetrain_profile" kindref="compound">DrivetrainProfile</ref></type>
        <definition>DrivetrainProfile tao::Drivetrain::get_profile</definition>
        <argsstring>() const</argsstring>
        <name>get_profile</name>
        <qualifiedname>tao::Drivetrain::get_profile</qualifiedname>
        <briefdescription>
<para>Generates a <ref refid="structtao_1_1_drivetrain_profile" kindref="compound">tao::DrivetrainProfile</ref> structure from the current drivetrain state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current drivetrain profile. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="227" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a0b51d63457060a86be51bc642ba2872c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tao::Drivetrain::is_settled</definition>
        <argsstring>() const</argsstring>
        <name>is_settled</name>
        <qualifiedname>tao::Drivetrain::is_settled</qualifiedname>
        <briefdescription>
<para>Indicates if the drivetrain is currently settled (within the threshold of both minimum error ranges). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the drivetrain is settled, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="233" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a35ecffb0b5339ea79480373ade5249ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::set_drive_tolerance</definition>
        <argsstring>(double error)</argsstring>
        <name>set_drive_tolerance</name>
        <qualifiedname>tao::Drivetrain::set_drive_tolerance</qualifiedname>
        <param>
          <type>double</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Sets the minimum acceptable error threshold for the drive PID controller to consider its movements settled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>The new minimum error threhold. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="243" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a32e15c0a3ef58f7e46b83a46ed741b15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::set_turn_tolerance</definition>
        <argsstring>(double error)</argsstring>
        <name>set_turn_tolerance</name>
        <qualifiedname>tao::Drivetrain::set_turn_tolerance</qualifiedname>
        <param>
          <type>double</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Sets the minimum acceptable error threshold in degrees for the turn PID controller to consider its movements settled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>The new minimum error threhold in degrees. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="249" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a5b15ebf8d8817cea28a7c6441cc56def" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::set_lookahead_distance</definition>
        <argsstring>(double distance)</argsstring>
        <name>set_lookahead_distance</name>
        <qualifiedname>tao::Drivetrain::set_lookahead_distance</qualifiedname>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
<para>Sets the lookahead distance used by the drivetrain&apos;s pure pursuit controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>The new lookahead radius </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="255" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a6d214520c2470c6c052397a091913b31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::set_drive_gains</definition>
        <argsstring>(const PIDGains &amp;gains)</argsstring>
        <name>set_drive_gains</name>
        <qualifiedname>tao::Drivetrain::set_drive_gains</qualifiedname>
        <param>
          <type>const <ref refid="structtao_1_1_p_i_d_gains" kindref="compound">PIDGains</ref> &amp;</type>
          <declname>gains</declname>
        </param>
        <briefdescription>
<para>Sets the gain constants for the drive PID controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gains</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="structtao_1_1_p_i_d_gains" kindref="compound">PIDGains</ref> structure containing the new proportional, integral and derivative gain constants. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="261" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a6e2fe02fc1879143d7095f1460ebbcb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::set_turn_gains</definition>
        <argsstring>(const PIDGains &amp;gains)</argsstring>
        <name>set_turn_gains</name>
        <qualifiedname>tao::Drivetrain::set_turn_gains</qualifiedname>
        <param>
          <type>const <ref refid="structtao_1_1_p_i_d_gains" kindref="compound">PIDGains</ref> &amp;</type>
          <declname>gains</declname>
        </param>
        <briefdescription>
<para>Sets the gain constants for the turn PID controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gains</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="structtao_1_1_p_i_d_gains" kindref="compound">PIDGains</ref> structure containing the new proportional, integral and derivative gain constants. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="267" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1ac83ee63f438567eddee1e6af5b9488e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::set_external_gear_ratio</definition>
        <argsstring>(double ratio)</argsstring>
        <name>set_external_gear_ratio</name>
        <qualifiedname>tao::Drivetrain::set_external_gear_ratio</qualifiedname>
        <param>
          <type>double</type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
<para>Gets the current gear external ratio of the drivetrain. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This could be useful for robots with a variable gear ratio (PTO) system.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>The new external gear ratio as a quotient. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="275" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1aa8c6855350fce4c249d030ca1a6ac59d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::set_max_drive_velocity</definition>
        <argsstring>(double velocity)</argsstring>
        <name>set_max_drive_velocity</name>
        <qualifiedname>tao::Drivetrain::set_max_drive_velocity</qualifiedname>
        <param>
          <type>double</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
<para>Sets the maximum velocity cap for forwards/backwards driving. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>A percentage of the new maximum velocity cap. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="281" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a5e18ba61ebbe28d5a54af00223416968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::set_max_turn_velocity</definition>
        <argsstring>(double velocity)</argsstring>
        <name>set_max_turn_velocity</name>
        <qualifiedname>tao::Drivetrain::set_max_turn_velocity</qualifiedname>
        <param>
          <type>double</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
<para>Sets the maximum velocity cap for turning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>A percentage of the new maximum velocity cap. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="287" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a446345e28adebd6cce98d0bab3b0f136" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::setup_tracking</definition>
        <argsstring>(Vector2 start_position=Vector2(0, 0), double start_heading=0, bool enable_logging=true)</argsstring>
        <name>setup_tracking</name>
        <qualifiedname>tao::Drivetrain::setup_tracking</qualifiedname>
        <param>
          <type><ref refid="classtao_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>start_position</declname>
          <defval><ref refid="classtao_1_1_vector2" kindref="compound">Vector2</ref>(0, 0)</defval>
        </param>
        <param>
          <type>double</type>
          <declname>start_heading</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>enable_logging</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Starts the tracking and PID threads for autonomous movement. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start_position</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D vector representing the starting cartesian coordinates of the drivetrain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_heading</parametername>
</parameternamelist>
<parameterdescription>
<para>An angle in degrees representing the starting orientation of the drivetrain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="298" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a11c2137fdf39b18314c341c901a0c81d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::reset_tracking</definition>
        <argsstring>(Vector2 start_position=Vector2(0, 0), double start_heading=0)</argsstring>
        <name>reset_tracking</name>
        <qualifiedname>tao::Drivetrain::reset_tracking</qualifiedname>
        <param>
          <type><ref refid="classtao_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>start_position</declname>
          <defval><ref refid="classtao_1_1_vector2" kindref="compound">Vector2</ref>(0, 0)</defval>
        </param>
        <param>
          <type>double</type>
          <declname>start_heading</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Resets the drive encoders and sets a new starting position for the drivetrain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start_position</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D vector representing the starting cartesian coordinates of the drivetrain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_heading</parametername>
</parameternamelist>
<parameterdescription>
<para>An angle in degrees representing the starting orientation of the drivetrain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="305" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a2f5d526ef373b69666309afc45c98302" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::stop_tracking</definition>
        <argsstring>()</argsstring>
        <name>stop_tracking</name>
        <qualifiedname>tao::Drivetrain::stop_tracking</qualifiedname>
        <briefdescription>
<para>Stops all threads used for tracking and movement, restoring manual control of the drivetrain. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="308" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a5067680a32f2ad4a7b69c8396fc3fd65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::drive</definition>
        <argsstring>(double distance, bool blocking=true)</argsstring>
        <name>drive</name>
        <qualifiedname>tao::Drivetrain::drive</qualifiedname>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>blocking</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Moves the drivetrain directly forwards or backwards along the x-axis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance that the drivetrain will move relative to it&apos;s current position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blocking</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines if the function should block the current thread until settled (within drive_tolerance for 10 iterations). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="319" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a1721f37994074aa47c7051a01c41b68c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::turn_to</definition>
        <argsstring>(double heading, bool blocking=true)</argsstring>
        <name>turn_to</name>
        <qualifiedname>tao::Drivetrain::turn_to</qualifiedname>
        <param>
          <type>double</type>
          <declname>heading</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>blocking</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Turns the drivetrain to an absolute heading. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>heading</parametername>
</parameternamelist>
<parameterdescription>
<para>The angle in degrees to rotate the drivetrain to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blocking</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines if the function should block the current thread until settled (within turn_tolerance for 10 iterations). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="326" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a6cf09dd9309e2771d725d5f862b8928a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::turn_to</definition>
        <argsstring>(Vector2 point, bool blocking=true)</argsstring>
        <name>turn_to</name>
        <qualifiedname>tao::Drivetrain::turn_to</qualifiedname>
        <param>
          <type><ref refid="classtao_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>point</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>blocking</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Turns the drivetrain face towards the direction of a cartesian coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D vector representing the desired coordinates to face towards. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blocking</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines if the function should block the current thread until settled (within turn_tolerance for 10 iterations). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="333" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1acd954f07296e9fd2effae3e932eb54f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::move_to</definition>
        <argsstring>(Vector2 position, bool blocking=true)</argsstring>
        <name>move_to</name>
        <qualifiedname>tao::Drivetrain::move_to</qualifiedname>
        <param>
          <type><ref refid="classtao_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>blocking</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Moves the drivetrain to a set of target coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D vector representing the absolute target coordinates to move to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines the direction that the robot will face to move to the target. The auto direction will always take the most efficient turn. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blocking</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines if the function should block the current thread until settled (within drive tolerance for 10 iterations). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="341" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a98dc88d3c22a1fe1c64f539611d0b22f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::move_path</definition>
        <argsstring>(std::vector&lt; Vector2 &gt; path)</argsstring>
        <name>move_path</name>
        <qualifiedname>tao::Drivetrain::move_path</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="classtao_1_1_vector2" kindref="compound">Vector2</ref> &gt;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Moves the drivetrain along a set of waypoints using pure pursuit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of 2D vectors representing waypoints forming a path.. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="347" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a28f7520e91518beb92c3346058d93421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::hold_position</definition>
        <argsstring>(bool blocking=true)</argsstring>
        <name>hold_position</name>
        <qualifiedname>tao::Drivetrain::hold_position</qualifiedname>
        <param>
          <type>bool</type>
          <declname>blocking</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Stops and holds the drivetrain at its current position and heading. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blocking</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines if the function should block the current thread until settled (within tolerance for 10 iterations). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="353" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a44fbed42d4f236ec0915f4e34f0ed8e2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::set_target_position</definition>
        <argsstring>(Vector2 position)</argsstring>
        <name>set_target_position</name>
        <qualifiedname>tao::Drivetrain::set_target_position</qualifiedname>
        <param>
          <type><ref refid="classtao_1_1_vector2" kindref="compound">Vector2</ref></type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="389" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a107ae68d73e5fd6039e3ffea7bd96deb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::set_target_distance</definition>
        <argsstring>(double distance)</argsstring>
        <name>set_target_distance</name>
        <qualifiedname>tao::Drivetrain::set_target_distance</qualifiedname>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="390" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1ae6a21561349164fc277f4c9f7b8cff4c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tao::Drivetrain::set_target_heading</definition>
        <argsstring>(double heading)</argsstring>
        <name>set_target_heading</name>
        <qualifiedname>tao::Drivetrain::set_target_heading</qualifiedname>
        <param>
          <type>double</type>
          <declname>heading</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="391" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1a3c7b89560057a9e9316bde1866f96fbd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tao::Drivetrain::daemon</definition>
        <argsstring>()</argsstring>
        <name>daemon</name>
        <qualifiedname>tao::Drivetrain::daemon</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="393" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classtao_1_1_drivetrain_1af8c0be6063e5432261516691186b2e00" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tao::Drivetrain::logging</definition>
        <argsstring>()</argsstring>
        <name>logging</name>
        <qualifiedname>tao::Drivetrain::logging</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/drivetrain.h" line="394" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class representing a nonholonomic drivetrain using position tracking and PID motion control. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/taolib/drivetrain.h" line="68" column="1" bodyfile="include/taolib/drivetrain.h" bodystart="68" bodyend="400"/>
    <listofallmembers>
      <member refid="classtao_1_1_drivetrain_1a3c7b89560057a9e9316bde1866f96fbd" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>daemon</name></member>
      <member refid="classtao_1_1_drivetrain_1a37292b2fbf3529a0f2250bd5231015f3" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>daemon_active</name></member>
      <member refid="classtao_1_1_drivetrain_1aef9d215635af3ce4849b51d81a52b631" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>daemon_thread</name></member>
      <member refid="classtao_1_1_drivetrain_1a5067680a32f2ad4a7b69c8396fc3fd65" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>drive</name></member>
      <member refid="classtao_1_1_drivetrain_1ae873fb5b2a4f507669cbb3283af50991" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>drive_controller</name></member>
      <member refid="classtao_1_1_drivetrain_1abfebcf7a511b33d6778b6e9ae7da9f99" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>drive_error</name></member>
      <member refid="classtao_1_1_drivetrain_1a927a8b0429e5fbde5e479cf40158b1e8" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>drive_tolerance</name></member>
      <member refid="classtao_1_1_drivetrain_1aef492840275283a8c78183213f7f11e4" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>Drivetrain</name></member>
      <member refid="classtao_1_1_drivetrain_1a604e19d423fbb4a7655b251c6fc83f89" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>Drivetrain</name></member>
      <member refid="classtao_1_1_drivetrain_1af27cccd2315a0729c9fa89314312d0c4" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>Drivetrain</name></member>
      <member refid="classtao_1_1_drivetrain_1a8358a68227d0aa01d55d29dd99df8e13" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>Drivetrain</name></member>
      <member refid="classtao_1_1_drivetrain_1a98991417402b4ec969a0d2561bc126e1" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>error_mode</name></member>
      <member refid="classtao_1_1_drivetrain_1a2dc10ef11b554e29627d93869bade72f" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>ErrorModes</name></member>
      <member refid="classtao_1_1_drivetrain_1a0e301bdff053f3aa371851ffc4cc208d" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>external_gear_ratio</name></member>
      <member refid="classtao_1_1_drivetrain_1affb17e0bc14ae1780c6327296aa1d6a0" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>get_drive_distance</name></member>
      <member refid="classtao_1_1_drivetrain_1af1e6b329d695b7e375fe544df3c44359" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>get_drive_error</name></member>
      <member refid="classtao_1_1_drivetrain_1af2a2573a05c075484cef0209cd6b86b9" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>get_drive_gains</name></member>
      <member refid="classtao_1_1_drivetrain_1acf95c62e6e4c4d56cdb7980ec6100a5e" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>get_drive_tolerance</name></member>
      <member refid="classtao_1_1_drivetrain_1a1904f98b7bd7ce4489203f1cf4905d89" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>get_external_gear_ratio</name></member>
      <member refid="classtao_1_1_drivetrain_1ad17418f668336fa5a150bddf91120854" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>get_heading</name></member>
      <member refid="classtao_1_1_drivetrain_1a353c31cc7e6554299186fe2cc0274566" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>get_lookahead_distance</name></member>
      <member refid="classtao_1_1_drivetrain_1aa8c3f9b38c85835f0aa928317cf3bb8d" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>get_max_drive_velocity</name></member>
      <member refid="classtao_1_1_drivetrain_1a65293743431e4370ef05e539891a63b7" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>get_max_turn_velocity</name></member>
      <member refid="classtao_1_1_drivetrain_1a514807bac58c3590e0c3da1e27c42338" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>get_position</name></member>
      <member refid="classtao_1_1_drivetrain_1ac3f4528f41c8582c51f8f83fc59fcaab" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>get_profile</name></member>
      <member refid="classtao_1_1_drivetrain_1a94b5d5694d15f3f7920fae9dbdbfe855" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>get_track_width</name></member>
      <member refid="classtao_1_1_drivetrain_1a975ff7607b60814ae4e5e52803ef3cfd" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>get_turn_error</name></member>
      <member refid="classtao_1_1_drivetrain_1ab99c88e9b7a18f03cbc51461dec9b526" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>get_turn_gains</name></member>
      <member refid="classtao_1_1_drivetrain_1ae9a6393f847dd32aed8e939e52c24e02" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>get_turn_tolerance</name></member>
      <member refid="classtao_1_1_drivetrain_1a336548e88be874b8635575acf8e462c6" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>global_position</name></member>
      <member refid="classtao_1_1_drivetrain_1a28f7520e91518beb92c3346058d93421" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>hold_position</name></member>
      <member refid="classtao_1_1_drivetrain_1ab3c0834a767f1e7d9767dd25618040ae" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>IMU</name></member>
      <member refid="classtao_1_1_drivetrain_1aca61da845056d394007ab8c1926a19d7" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>IMU_invalid</name></member>
      <member refid="classtao_1_1_drivetrain_1a5895a8b657c381e3e1f5286f5c0a5ced" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>initial_heading</name></member>
      <member refid="classtao_1_1_drivetrain_1a0b51d63457060a86be51bc642ba2872c" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>is_settled</name></member>
      <member refid="classtao_1_1_drivetrain_1a6b701677d5612b218460cddfe4a85091" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>left_encoder</name></member>
      <member refid="classtao_1_1_drivetrain_1aede65b3dc8d5babee429b956c76d26eb" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>left_motors</name></member>
      <member refid="classtao_1_1_drivetrain_1af8c0be6063e5432261516691186b2e00" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>logging</name></member>
      <member refid="classtao_1_1_drivetrain_1aa66dee790cc4b05186528c6be378e35d" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>logging_active</name></member>
      <member refid="classtao_1_1_drivetrain_1a94283e2ca8ba6f47971426cf0348a877" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>logging_thread</name></member>
      <member refid="classtao_1_1_drivetrain_1a5989b2bc87e0a16aaaeb6cad5b516a13" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>lookahead_distance</name></member>
      <member refid="classtao_1_1_drivetrain_1a5daf127e214efc809253586fd962f6ff" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>max_drive_velocity</name></member>
      <member refid="classtao_1_1_drivetrain_1a4509438faa1a67e57fd1326e9de20e48" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>max_turn_velocity</name></member>
      <member refid="classtao_1_1_drivetrain_1a98dc88d3c22a1fe1c64f539611d0b22f" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>move_path</name></member>
      <member refid="classtao_1_1_drivetrain_1acd954f07296e9fd2effae3e932eb54f8" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>move_to</name></member>
      <member refid="classtao_1_1_drivetrain_1a11c2137fdf39b18314c341c901a0c81d" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>reset_tracking</name></member>
      <member refid="classtao_1_1_drivetrain_1aeac47de5f3557d1f61f609cfc3df21b4" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>right_encoder</name></member>
      <member refid="classtao_1_1_drivetrain_1af27899d6b811fcb523f2da967e468e57" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>right_motors</name></member>
      <member refid="classtao_1_1_drivetrain_1a6d214520c2470c6c052397a091913b31" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>set_drive_gains</name></member>
      <member refid="classtao_1_1_drivetrain_1a35ecffb0b5339ea79480373ade5249ef" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>set_drive_tolerance</name></member>
      <member refid="classtao_1_1_drivetrain_1ac83ee63f438567eddee1e6af5b9488e1" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>set_external_gear_ratio</name></member>
      <member refid="classtao_1_1_drivetrain_1a5b15ebf8d8817cea28a7c6441cc56def" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>set_lookahead_distance</name></member>
      <member refid="classtao_1_1_drivetrain_1aa8c6855350fce4c249d030ca1a6ac59d" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>set_max_drive_velocity</name></member>
      <member refid="classtao_1_1_drivetrain_1a5e18ba61ebbe28d5a54af00223416968" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>set_max_turn_velocity</name></member>
      <member refid="classtao_1_1_drivetrain_1a107ae68d73e5fd6039e3ffea7bd96deb" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>set_target_distance</name></member>
      <member refid="classtao_1_1_drivetrain_1ae6a21561349164fc277f4c9f7b8cff4c" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>set_target_heading</name></member>
      <member refid="classtao_1_1_drivetrain_1a44fbed42d4f236ec0915f4e34f0ed8e2" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>set_target_position</name></member>
      <member refid="classtao_1_1_drivetrain_1a6e2fe02fc1879143d7095f1460ebbcb5" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>set_turn_gains</name></member>
      <member refid="classtao_1_1_drivetrain_1a32e15c0a3ef58f7e46b83a46ed741b15" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>set_turn_tolerance</name></member>
      <member refid="classtao_1_1_drivetrain_1adff7a9841bfe21586a9c39340eca31a5" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>settled</name></member>
      <member refid="classtao_1_1_drivetrain_1a446345e28adebd6cce98d0bab3b0f136" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>setup_tracking</name></member>
      <member refid="classtao_1_1_drivetrain_1a38d469766eddf01428933f24b26fe2bf" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>start_heading</name></member>
      <member refid="classtao_1_1_drivetrain_1a2f5d526ef373b69666309afc45c98302" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>stop_tracking</name></member>
      <member refid="classtao_1_1_drivetrain_1aab2a1b792a62cd30f4eda9f3c815aad9" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>target_distance</name></member>
      <member refid="classtao_1_1_drivetrain_1aea7039d6481adeb19afbe68c522fd6aa" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>target_heading</name></member>
      <member refid="classtao_1_1_drivetrain_1a302419a1fb0c3470140aa44528b9c3c7" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>target_position</name></member>
      <member refid="classtao_1_1_drivetrain_1a53e04e719fc3c6724e6200ace6fc84bc" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>track_width</name></member>
      <member refid="classtao_1_1_drivetrain_1afaec4419e4fb98af8a504eee2ed58e60" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>turn_controller</name></member>
      <member refid="classtao_1_1_drivetrain_1a23bbf108e35f9a7a5269a61259d8cc3b" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>turn_error</name></member>
      <member refid="classtao_1_1_drivetrain_1a1721f37994074aa47c7051a01c41b68c" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>turn_to</name></member>
      <member refid="classtao_1_1_drivetrain_1a6cf09dd9309e2771d725d5f862b8928a" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>turn_to</name></member>
      <member refid="classtao_1_1_drivetrain_1a317bef2333abd120d0df9356b4ed2927" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>turn_tolerance</name></member>
      <member refid="classtao_1_1_drivetrain_1ac34a8f5c590680b0d152fd155c86d12a" prot="private" virt="non-virtual"><scope>tao::Drivetrain</scope><name>wheel_circumference</name></member>
      <member refid="classtao_1_1_drivetrain_1a1a1fa53ea307cb18c0094a1f540953ce" prot="public" virt="non-virtual"><scope>tao::Drivetrain</scope><name>~Drivetrain</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
