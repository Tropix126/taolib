<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespacetao_1_1threading" kind="namespace" language="C++">
    <compoundname>tao::threading</compoundname>
    <innernamespace refid="namespacetao_1_1threading_1_1internal">tao::threading::internal</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="threading_8h_1a89090dc949bed226d9082fd4e02bec66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Ret</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>vex::thread</type>
        <definition>vex::thread tao::threading::make_thread</definition>
        <argsstring>(Ret(*fn)(Args...), Args... args)</argsstring>
        <name>make_thread</name>
        <qualifiedname>tao::threading::make_thread</qualifiedname>
        <param>
          <type>Ret(*)(Args...)</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Creates a vex::thread that runs a given function with arguments. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Ret</parametername>
</parameternamelist>
<parameterdescription>
<para>return type of <computeroutput>fn</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>types of arguments to <computeroutput>fn</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>the target function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>the arguments to <computeroutput>fn</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vex::thread that is running <computeroutput>fn</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/threading.h" line="52" column="13" bodyfile="include/taolib/threading.h" bodystart="52" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="threading_8h_1a772d793ab2ea50b3c0cb53890bb91bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Cls</type>
          </param>
          <param>
            <type>typename Ret</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>Ret</type>
        <definition>Ret tao::threading::static_proxy</definition>
        <argsstring>(Cls *cls_instance, Ret(Cls::*cls_fn)(Args...), Args... args)</argsstring>
        <name>static_proxy</name>
        <qualifiedname>tao::threading::static_proxy</qualifiedname>
        <param>
          <type>Cls *</type>
          <declname>cls_instance</declname>
        </param>
        <param>
          <type>Ret(Cls::*)(Args...)</type>
          <declname>cls_fn</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Wraps a member function to allow calling it like a static function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Cls</parametername>
</parameternamelist>
<parameterdescription>
<para>type of <computeroutput>cls_instance</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Ret</parametername>
</parameternamelist>
<parameterdescription>
<para>return type <computeroutput>cls_fn</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>types of arguments to <computeroutput>cls_fn</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cls_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to instance of class to run <computeroutput>cls_fn</computeroutput> on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cls_fn</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to function callable from <computeroutput>cls_instance</computeroutput>; i.e., <computeroutput>&amp;Cls::some_function</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to <computeroutput>cls_fn</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whatever value <computeroutput>cls_fn(args...)</computeroutput> returns </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/threading.h" line="77" column="5" bodyfile="include/taolib/threading.h" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="threading_8h_1afb5b6d8eb277cf8d8f07ed9e29e16744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Cls</type>
          </param>
          <param>
            <type>typename Ret</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>vex::thread</type>
        <definition>vex::thread tao::threading::make_member_thread</definition>
        <argsstring>(Cls *cls_instance, Ret(Cls::*cls_fn)(Args...), Args... args)</argsstring>
        <name>make_member_thread</name>
        <qualifiedname>tao::threading::make_member_thread</qualifiedname>
        <param>
          <type>Cls *</type>
          <declname>cls_instance</declname>
        </param>
        <param>
          <type>Ret(Cls::*)(Args...)</type>
          <declname>cls_fn</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Creates a vex::thread that runs a member function with arguments. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Cls</parametername>
</parameternamelist>
<parameterdescription>
<para>type of <computeroutput>cls_instance</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Ret</parametername>
</parameternamelist>
<parameterdescription>
<para>return type of <computeroutput>cls_fn</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>types of arguments to <computeroutput>cls_fn</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cls_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to instance of class to run <computeroutput>cls_fn</computeroutput> on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cls_fn</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to function callable from <computeroutput>cls_instance</computeroutput>; i.e., <computeroutput>&amp;Cls::some_function</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to <computeroutput>cls_fn</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vex::thread that is running <computeroutput>cls_fn</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taolib/threading.h" line="92" column="13" bodyfile="include/taolib/threading.h" bodystart="92" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/taolib/threading.h" line="7" column="1"/>
  </compounddef>
</doxygen>
