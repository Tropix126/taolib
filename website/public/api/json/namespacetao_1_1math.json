{
  "abstract": false,
  "anchor": "",
  "category": "namespaces",
  "const": false,
  "definition": "",
  "explicit": false,
  "fullname": "tao::math",
  "hasAdditionalMembers": false,
  "hasDetails": false,
  "inline": false,
  "kind": "namespace",
  "language": "cpp",
  "location": {
    "column": 1,
    "file": "include/taolib/math.h",
    "line": 12
  },
  "name": "tao::math",
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "tao",
    "kind": "namespace",
    "language": "cpp",
    "name": "tao",
    "qualifiedname": "tao",
    "refid": "namespacetao",
    "title": "tao",
    "url": "namespacetao.md",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "tao",
      "kind": "namespace",
      "language": "cpp",
      "name": "tao",
      "qualifiedname": "tao",
      "refid": "namespacetao",
      "title": "tao",
      "url": "namespacetao.md",
      "visibility": "public"
    }
  ],
  "publicAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-pi",
      "category": "attributes",
      "const": false,
      "definition": "constexpr double tao::math::PI",
      "explicit": false,
      "fullname": "tao::math::PI",
      "hasDetails": false,
      "initializer": "= 3.14159265358979323846",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "include/taolib/math.h",
        "bodyStart": 14,
        "column": 18,
        "file": "include/taolib/math.h",
        "line": 14
      },
      "name": "PI",
      "override": false,
      "qualifiedname": "tao::math::PI",
      "refid": "math_8h_1a904306e9fcf2e0dbab20011a89ef2c76",
      "static": false,
      "strong": false,
      "title": "PI",
      "type": "constexpr double",
      "typePlain": "constexpr double",
      "url": "namespacetao_1_1math.md#variable-pi",
      "visibility": "public"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-vector-average",
      "argsString": "(std::vector< double > const &v)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "double tao::math::vector_average",
      "deleted": false,
      "explicit": false,
      "fullname": "tao::math::vector_average",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 8,
        "file": "include/taolib/math.h",
        "line": 16
      },
      "name": "vector_average",
      "override": false,
      "params": [
        {
          "name": "v",
          "type": "std::vector< double > const &",
          "typePlain": "std::vector< double > const &"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "tao::math::vector_average",
      "refid": "math_8h_1a44b0dded047d3f950de7b292bc83d014",
      "static": false,
      "strong": false,
      "title": "vector_average",
      "type": "double",
      "typePlain": "double",
      "url": "namespacetao_1_1math.md#function-vector-average",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-normalize-degrees",
      "argsString": "(double degrees)",
      "brief": "Converts a number representing an angle in degrees and to an equivalent angle between -179 and 180 degrees. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "double tao::math::normalize_degrees",
      "deleted": false,
      "explicit": false,
      "fullname": "tao::math::normalize_degrees",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 8,
        "file": "include/taolib/math.h",
        "line": 24
      },
      "name": "normalize_degrees",
      "override": false,
      "paramList": [
        {
          "name": "degrees",
          "text": "The initial angle in degrees. "
        }
      ],
      "params": [
        {
          "name": "degrees",
          "type": "double",
          "typePlain": "double"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "tao::math::normalize_degrees",
      "refid": "math_8h_1ac18a2780e7f143d609f000fcd8b1d140",
      "returns": [
        "The equivalent normalized angle between -170 and 180 degrees. "
      ],
      "static": false,
      "strong": false,
      "summary": "Converts a number representing an angle in degrees and to an equivalent angle between -179 and 180 degrees. ",
      "title": "normalize_degrees",
      "type": "double",
      "typePlain": "double",
      "url": "namespacetao_1_1math.md#function-normalize-degrees",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-normalize-speeds",
      "argsString": "(double left_speed, double right_speed, double max_speed)",
      "brief": "Given a left, right, and maximum speed, calculate a new set of speed values that preserve the ratio between left and right if one of the two values is over the maximum threshold. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "std::pair< double, double > tao::math::normalize_speeds",
      "deleted": false,
      "explicit": false,
      "fullname": "tao::math::normalize_speeds",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 11,
        "file": "include/taolib/math.h",
        "line": 37
      },
      "name": "normalize_speeds",
      "override": false,
      "paramList": [
        {
          "name": "left_speed",
          "text": "The uncapped left speed. "
        },
        {
          "name": "right_speed",
          "text": "The uncapped right speed. "
        },
        {
          "name": "max_speed",
          "text": "The maximum speed that can be reached by a motor."
        }
      ],
      "params": [
        {
          "name": "left_speed",
          "type": "double",
          "typePlain": "double"
        },
        {
          "name": "right_speed",
          "type": "double",
          "typePlain": "double"
        },
        {
          "name": "max_speed",
          "type": "double",
          "typePlain": "double"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "tao::math::normalize_speeds",
      "refid": "math_8h_1ad983cebd164e1a084690578b5109aeac",
      "returns": [
        "A pair of speed values {left_speed, right_speed} that is correctly scaled down if one of the two values exceeds max_speed. "
      ],
      "static": false,
      "strong": false,
      "summary": "Given a left, right, and maximum speed, calculate a new set of speed values that preserve the ratio between left and right if one of the two values is over the maximum threshold. ",
      "title": "normalize_speeds",
      "type": "std::pair< double, double >",
      "typePlain": "std::pair< double, double >",
      "url": "namespacetao_1_1math.md#function-normalize-speeds",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-to-radians",
      "argsString": "(double degrees)",
      "brief": "Converts an angle in degrees to an angle in radians. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "constexpr double tao::math::to_radians",
      "deleted": false,
      "explicit": false,
      "fullname": "tao::math::to_radians",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 47,
        "bodyFile": "include/taolib/math.h",
        "bodyStart": 45,
        "column": 18,
        "file": "include/taolib/math.h",
        "line": 45
      },
      "name": "to_radians",
      "override": false,
      "paramList": [
        {
          "name": "degrees",
          "text": "The angle in degrees. "
        }
      ],
      "params": [
        {
          "name": "degrees",
          "type": "double",
          "typePlain": "double"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "tao::math::to_radians",
      "refid": "math_8h_1adc1a81a61e5f910b858b2389331b7ca3",
      "returns": [
        "The angle in radians. "
      ],
      "static": false,
      "strong": false,
      "summary": "Converts an angle in degrees to an angle in radians. ",
      "title": "to_radians",
      "type": "constexpr double",
      "typePlain": "constexpr double",
      "url": "namespacetao_1_1math.md#function-to-radians",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-to-degrees",
      "argsString": "(double radians)",
      "brief": "Converts an angle in radians to an angle in degrees. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "constexpr double tao::math::to_degrees",
      "deleted": false,
      "explicit": false,
      "fullname": "tao::math::to_degrees",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 57,
        "bodyFile": "include/taolib/math.h",
        "bodyStart": 55,
        "column": 18,
        "file": "include/taolib/math.h",
        "line": 55
      },
      "name": "to_degrees",
      "override": false,
      "paramList": [
        {
          "name": "radians",
          "text": "The angle in radians. "
        }
      ],
      "params": [
        {
          "name": "radians",
          "type": "double",
          "typePlain": "double"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "tao::math::to_degrees",
      "refid": "math_8h_1ac172eac8525330502ce662c8b28f8861",
      "returns": [
        "The angle in degrees. "
      ],
      "static": false,
      "strong": false,
      "summary": "Converts an angle in radians to an angle in degrees. ",
      "title": "to_degrees",
      "type": "constexpr double",
      "typePlain": "constexpr double",
      "url": "namespacetao_1_1math.md#function-to-degrees",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-clamp",
      "argsString": "(T value, T min, T max)",
      "brief": "Restricts a number between a minimum and maximum value. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "constexpr T tao::math::clamp",
      "deleted": false,
      "explicit": false,
      "fullname": "tao::math::clamp",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 71,
        "bodyFile": "include/taolib/math.h",
        "bodyStart": 69,
        "column": 13,
        "file": "include/taolib/math.h",
        "line": 69
      },
      "name": "clamp",
      "override": false,
      "paramList": [
        {
          "name": "value",
          "text": "The number to restrict. "
        },
        {
          "name": "min",
          "text": "The minimum value that the input will be restricted to. "
        },
        {
          "name": "maximum",
          "text": "The maximum value that the input will be restricted to."
        }
      ],
      "params": [
        {
          "name": "value",
          "type": "T",
          "typePlain": "T"
        },
        {
          "name": "min",
          "type": "T",
          "typePlain": "T"
        },
        {
          "name": "max",
          "type": "T",
          "typePlain": "T"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "tao::math::clamp",
      "refid": "math_8h_1a12b8b8e2c9cab5cc23719cadf3d358e6",
      "returns": [
        "The input value restricted between [min, max]. "
      ],
      "static": false,
      "strong": false,
      "summary": "Restricts a number between a minimum and maximum value. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename T",
          "typePlain": "typename T"
        }
      ],
      "title": "clamp",
      "type": "constexpr T",
      "typePlain": "constexpr T",
      "url": "namespacetao_1_1math.md#function-clamp",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-sign",
      "argsString": "(T value)",
      "brief": "Determines whether an input number is positive or negative. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "constexpr T tao::math::sign",
      "deleted": false,
      "explicit": false,
      "fullname": "tao::math::sign",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 83,
        "bodyFile": "include/taolib/math.h",
        "bodyStart": 81,
        "column": 13,
        "file": "include/taolib/math.h",
        "line": 81
      },
      "name": "sign",
      "override": false,
      "paramList": [
        {
          "name": "value",
          "text": "The input number to be checked."
        }
      ],
      "params": [
        {
          "name": "value",
          "type": "T",
          "typePlain": "T"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "tao::math::sign",
      "refid": "math_8h_1a45d3693678b15657a25eba8d16223ab5",
      "returns": [
        "-1 if the number is negative, 1 if it is positive. "
      ],
      "static": false,
      "strong": false,
      "summary": "Determines whether an input number is positive or negative. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename T",
          "typePlain": "typename T"
        }
      ],
      "title": "sign",
      "type": "constexpr T",
      "typePlain": "constexpr T",
      "url": "namespacetao_1_1math.md#function-sign",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-line-circle-intersections",
      "argsString": "(Vector2 center, double radius, Vector2 point_1, Vector2 point_2)",
      "brief": "Finds the point(s) of intersection between a line segment and a circle. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "std::vector< Vector2 > tao::math::line_circle_intersections",
      "deleted": false,
      "explicit": false,
      "fullname": "tao::math::line_circle_intersections",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 13,
        "file": "include/taolib/math.h",
        "line": 95
      },
      "name": "line_circle_intersections",
      "override": false,
      "paramList": [
        {
          "name": "center",
          "text": "The location of the circle's center point. "
        },
        {
          "name": "radius",
          "text": "The radius of the circle. "
        },
        {
          "name": "point_1",
          "text": "The starting point of the line segment. "
        },
        {
          "name": "point_2",
          "text": "The endpoint of the line segment."
        }
      ],
      "params": [
        {
          "name": "center",
          "type": "[Vector2](classtao_1_1_vector2.md)",
          "typePlain": "Vector2"
        },
        {
          "name": "radius",
          "type": "double",
          "typePlain": "double"
        },
        {
          "name": "point_1",
          "type": "[Vector2](classtao_1_1_vector2.md)",
          "typePlain": "Vector2"
        },
        {
          "name": "point_2",
          "type": "[Vector2](classtao_1_1_vector2.md)",
          "typePlain": "Vector2"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "tao::math::line_circle_intersections",
      "refid": "math_8h_1a6703bcfcdf062c26b9450553be54c1a3",
      "returns": [
        "0-2 [Vector2](classtao_1_1_vector2.md) instances representing an intersection between the line segment and the circle. "
      ],
      "static": false,
      "strong": false,
      "summary": "Finds the point(s) of intersection between a line segment and a circle. ",
      "title": "line_circle_intersections",
      "type": "std::vector< [Vector2](classtao_1_1_vector2.md) >",
      "typePlain": "std::vector< Vector2 >",
      "url": "namespacetao_1_1math.md#function-line-circle-intersections",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "qualifiedname": "tao::math",
  "refid": "namespacetao_1_1math",
  "static": false,
  "strong": false,
  "title": "tao::math",
  "url": "namespacetao_1_1math.md",
  "visibility": "public"
}